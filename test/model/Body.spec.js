/**
 * Switch Database REST API
 * Switch API is the primary endpoint of data sevices and Switch DB's platform. You can do adding, editing, deleting or listing data works to your database with query operations by using this low-level API based on HTTP.
 *
 * OpenAPI spec version: 1.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwitchDatabaseRestApi);
  }
}(this, function(expect, SwitchDatabaseRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwitchDatabaseRestApi.Body();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Body', function() {
    it('should create an instance of Body', function() {
      // uncomment below and update the code to test Body
      //var instane = new SwitchDatabaseRestApi.Body();
      //expect(instance).to.be.a(SwitchDatabaseRestApi.Body);
    });

    it('should have the property list (base name: "list")', function() {
      // uncomment below and update the code to test the property list
      //var instane = new SwitchDatabaseRestApi.Body();
      //expect(instance).to.be();
    });

    it('should have the property count (base name: "count")', function() {
      // uncomment below and update the code to test the property count
      //var instane = new SwitchDatabaseRestApi.Body();
      //expect(instance).to.be();
    });

    it('should have the property page (base name: "page")', function() {
      // uncomment below and update the code to test the property page
      //var instane = new SwitchDatabaseRestApi.Body();
      //expect(instance).to.be();
    });

    it('should have the property whereType (base name: "whereType")', function() {
      // uncomment below and update the code to test the property whereType
      //var instane = new SwitchDatabaseRestApi.Body();
      //expect(instance).to.be();
    });

    it('should have the property where (base name: "where")', function() {
      // uncomment below and update the code to test the property where
      //var instane = new SwitchDatabaseRestApi.Body();
      //expect(instance).to.be();
    });

    it('should have the property order (base name: "order")', function() {
      // uncomment below and update the code to test the property order
      //var instane = new SwitchDatabaseRestApi.Body();
      //expect(instance).to.be();
    });

  });

}));
